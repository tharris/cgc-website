[%# This is the classic report page layout 
    It mixes the template directory layout 
    structure a bit since it doesn't have a layout
    template.  This template is specified by the 
    action and wrapped in html by wrapper.tt2    
-%]

[% SET this_object_id    = object.name.data.id %]
[% SET this_object_label = object.name.data.label %]

<div id="wrap">
[% PROCESS header/classic.tt2 %]

    <div id="content">

     [% PROCESS "nav/classic_contextual_navbar.tt2" %]

     <div class="title">
         [% title %]
         [%- IF object -%]
             <h2>[% class FILTER ucfirst %] Report: [%- tag2link(object.name.data) -%]</h2>
         [% END %] 
      </div>

      [%# Add in the prompt and per-class horizontal nav %]
      [% PROCESS nav/classic_prompt.tt2(object.name.data.class) %]
      [% PROCESS "nav/classic_report_toc.tt2" %]

      <table border="1" width="100%">
        [% section = get_section($class) %]
         [% FOREACH widget_name IN c.config.sections.$section.$class.widget_order %]
              [% widget = c.config.sections.$section.$class.widgets.$widget_name %]
                    [% WRAPPER $widget_block -%]
                          [%#- This is a little goofy. Let me explain.
                               What we are doing here is preparing the widget
                               and markup as a target for an ajax request.
                               This lets us display widget headers above
                               containers which are then filled by ajax.
			       
			       For the classic view, this includes building 
			       a nested table structure.

                               Although we could place the WRAPPER in each widget
                               template proper, widget headers are then displayed
                               once the content has returned.

			       The upshot of this is that widgets are not self-contained.
			       I'm not entirely psyched about that. Something to ponder.
			       %]                               
                    [% END %]

		    [%# This is a work in progress: I want to sequentially load widgets.
		        Firefox does this using the existing code, but other browsers do not.			
			%] 
                    <script>
                             $jq("#[%- widget.name -%]").load("[% c.uri_for('/rest','widget',class,this_object_id,widget.name) %]",
   		                   function(response, status, xhr) {
                                          if (status == "error") {
                                             var msg = "Sorry but there was an error: ";
                                             $jq("#error").html(msg + xhr.status + " " + xhr.statusText);
                                           } 
                                    })				      
                   </script>


              [% END %]
          [%# END %]

        </table>

     [% content %]
      <div id="spacer" />
   </div>

[% PROCESS footer/default.tt2 %]
</div>