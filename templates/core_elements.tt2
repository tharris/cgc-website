[%# Core template elements %]


[% BLOCK modal %]
<div class="modal-header">
      <button type="button" class="close" data-dismiss="modal">&times;</button>
      <h3>[% title %]</h3>
      [% content %]
</div>
[% END %]

[% BLOCK modal_body %]
<div class="modal-body">
   [% content %]
</div>
</div>
[% END %]

[% BLOCK  modal_footer %]
<div class="modal-footer">
    [% content %]
</div>
[% END %]


[%###########################################

    Link helpers

############################################# %]

[%# Link to a species %]
[% MACRO species_link(species) BLOCK %]
   <em><a href="/species/[% species %]">[% species %]</a></em>
[% END; %]


[%# Link to a species %]
[% MACRO species_link_dynamic(species) BLOCK %]
   <em><a href="/species/[% species.name %]">[% species.name %]</a></em>
[% END; %]

[% MACRO ncbi_link(species) BLOCK %]
   <a href="http://www.ncbi.nlm.nih.gov/Taxonomy/Browser/wwwtax.cgi?id=[% species.ncbi_taxonomy_id %]">[% species.ncbi_taxonomy_id %]</a>
[% END; %]



[%###########################################

    General formatting

############################################# %]

[% MACRO genetic_position(object) BLOCK;
   IF object.chromosome && object.gmap;
      # Expects a hashref with keys of chromosome and gmap
      object.chromosome _ ': ' _  object.gmap;
   ELSE;
       '<em>genetic position unknown or not listed</em>';
   END;
END;
%]

[% MACRO genomic_position(object) BLOCK;
   IF object.chromosome && object.pmap_start && object.pmap_stop;
       # Expects a hashref with keys of chromosome and gmap
       object.chromosome _ ': ' _  object.pmap_start _ '..' _ object.pmap_stop;
   ELSE;
       '<em>genomic coordinates unknown or not listed</em>';
   END;
END;
%]


[%# constructed_genotype: expects data structure generated by REST::atomized_genotype() %]
[% MACRO constructed_genotype(data) BLOCK;
      IF data;
	       	  
          USE chromosome_iterator = iterator(data.keys.sort);	
          FOREACH chromosome IN chromosome_iterator;

	     # Components should be sorted by gmap position.
             FOREACH component IN data.$chromosome.keys;
     		   '<a href="' _ c.uri_for('/' _ data.$chromosome.$component.type,component)
		               _ '">' _ component _ '</a>';

  		      FOREACH child IN data.$chromosome.$component.has;
         	         '(' _ '<a href="' _ c.uri_for('/' _ child.type, child.name)
				  _ '">' _ child.name _ '</a>' _ ')';
		      END;
    		      ' ' _ chromosome;
		      IF loop.last;
			  IF chromosome_iterator.last;
			  '.';
			  ELSE;
			  '; ';
			  END;
		     END;

             END; # FOREACH component
        END; # FOREACH chromosome
      END; # IF
	     '<span class="label label-important"> Constructed from constituent parts; compare to the "Genotype" field above.</span>';
END;
%]




[%# Typeahead support, required on all index pages %]
[% MACRO typeahead_support(class,columns) BLOCK %]

<script>
    $(function () {
        $('#search-[% class %]').typeahead({
            ajax: {
            	uris: [
		[% FOREACH col IN columns %]
            		'/rest/list/[% class %]?distinct;columns=[% col %]',
	        [% END %]
            	],
				preprocess: function (item) {
					return item[0];
				}
            },
        });
        
        $('#search-[% class %]').on('change',
            function (data) {
                window.location.href = '/[% class %]/' + data.target.value
                // If we want to get fancy and avoid page loads....
                // window.location.hash = data.target.value;
            }
        );

        /*
        $(window).hashchange(function () {
            // var laboratoryName = location.hash.replace(/^#/,'');
            $.ajax({
                url: '/[% class %]/' + [% class %]Name,
                dataType: 'json',
                success: function (json) {
                    console.log(json);
                    var tableRow = function (key) {
                        var row = $('<tr></tr>');
                        row.append($('<th></th>').html(key))
                            .append($('<td></td>').html(json[key]));
                        return row;
                    };
                    $('#[% class %]-view').empty();
                    $('#[% class %]-view').add(tableRow("name"));
                }
            });
        });
        */
    });
</script>
[% END %]


[% BLOCK rest_error %]
    [% IF rest.error %]
        <div class="alert alert-error">
	   <strong>Error:</strong> [% rest.error | html %]
       </div>
    [% END %]
[% END %]



[% BLOCK admin_content %]
   [% IF c.check_user_roles('admin') %]
     <div class="alert alert-info"><h3>[% title %]</h3>
          <p><span class="label label-important">Important</span> This content is only visible to administrators!</p>
          <p>[% content %]</p>
     </div>
   [% END %]
[% END %]



[%# Format history for a given object; expects the flattened history data structure %]
[% MACRO format_history BLOCK %]
     <table class="table table-striped">
           <thead>
              <tr>            
                 <th>Event</th>
                 <th>Date</th>
		 <th>Remark</th>
	      </tr>
              </thead>
              <tbody>
                 [% FOREACH item IN items %]
                    <tr>                             
                        <td>[% item.event %]</td> 
 	                <td>[% item.date %]</td>
                        <td>[% item.remark %]</td>
                    </tr>
                 [% END %]
	       </tbody>
      </table>
[% END %]






[% BLOCK strain_submission_form %]

   [%# Dynamically select action - PUT or POST %]
      <form class="form-horizontal" method="POST" id="strain-form" action="/strain/new-strain">
<!--      <form class="form-horizontal" id="strain-form" action="#"> -->
        <fieldset>
          <legend>Origin</legend>

          <div class="control-group">
            <label class="control-label" for="submitted_by">Made By</label>
            <div class="controls">
              <input type="text" class="input-xlarge" id="made_by">
              <p class="help-block">The person who made the strain if different than the person submitting.</p>
            </div>
          </div>


          <div class="control-group">
            <label class="control-label" for="laboratory">Laboratory</label>
            <div class="controls">
                  <select id="laboratory">
                     <option></option>
	      [% FOREACH lab IN labs.keys.sort %]
                     <option value="[% labs.$lab.id %]">[% lab %] ([% labs.$lab.head %])</option>
	      [% END %]
              </select>
            </div>
          </div>
        </fieldset>

        <fieldset>
          <legend>Strain Information</legend>

          <div class="control-group">
            <label class="control-label" for="strain_name">Strain Name</label>
            <div class="controls">
              <input type="text" class="input-xlarge" id="strain_name">
              <p class="help-block">Enter the strain designation, for example, EG1000, N2.</p>
            </div>
          </div>


          <div class="control-group">
            <label class="control-label" for="species">Species</label>
            <div class="controls">
                  <select id="species">
                     <option></option>
	      [% FOREACH this_species IN species.keys.sort %]
                     <option value="[% species.$this_species %]">[% this_species %]</option>
	      [% END %]
              </select>
            </div>
          </div>

          <div class="control-group">
            <label class="control-label" for="genotype">Genotype</label>
            <div class="controls">
              <input type="text" class="input-xlarge" id="genotype">
              <p class="help-block">The genotype of the strain.</p>
            </div>
          </div>

          <div class="control-group">
            <label class="control-label" for="laboratory">Outcrossed</label>
            <div class="controls">
              <select id="outcrossed">
                <option></option>
                <option>not outcrossed</option>
                <option>1x</option>
                <option>2x</option>
                <option>3x</option>
                <option>4x</option>
                <option>5x</option>
                <option>6x</option>
                <option>7x</option>
                <option>8x</option>
                <option>9x</option>
                <option>10x</option>
              </select>
            </div>
          </div>

          <div class="control-group">
            <label class="control-label" for="mutagen">Mutagen</label>
            <div class="controls">
                  <select id="mutagen">
                     <option></option>
	      [% FOREACH mutagen IN mutagens.keys.sort %]
                     <option value="[% mutagens.$mutagen %]">[% mutagen %]</option>
	      [% END %]
              </select>
            </div>
          </div>


          <div class="control-group">
            <label class="control-label" for="contains-type">Contains</label>
            <div class="controls containsDuplicatable" id="contains1">
	         [% types = [ 'gene', 'variation', 'transgene' , 'rearrangement'] %]


                  <select id="contains-type1" class="contains-selecter">
                     <option></option>
      	             [% FOREACH thistype IN types.sort %]
                         <option value="[% thistype %]">[% thistype %]</option>
     	             [% END %]
                  </select>

      	             [% FOREACH thistype IN types.sort %]		  
                  <select id="contains-name1" type="[% thistype %]" style="display:none">
                     <option></option>
     	                [% FOREACH item IN $thistype.keys.sort %]
                           <option value="[% $thistype.$item.id %]">[% $thistype.$item.name %] [% $thistype.$item.chromosome %]</option>
      	                [% END %]
                     </select>
		     [% END %]

<!--              <input type="text" class="input-xlarge" id="contains-name1"> -->
		   <a href="#" class="btn btn-mini btnAdd"><i class="icon-plus"></i></a> <a href="#" class="btn btn-mini btnDel"><i class="icon-minus"></i></a>
            </div>
          </div>

          <div class="control-group">
            <label class="control-label" for="remark">Remarks</label>
            <div class="controls">
              <textarea class="input-xlarge" id="remark" rows="3"></textarea>
            </div>
          </div>
	  </fieldset>


	  <fieldset>
	  <legend>Work Flow</legend>
	  <em>This section tracks the workflow steps for adding a new strain to the collection. Each step should be unique and trackable by user and date. Right now just checkboxes.</em>


          <div class="control-group">
            <label class="control-label" for="receivedCheckbox">Strain Received</label>
            <div class="controls">
              <label class="checkbox">
                <input type="checkbox" id="receivedCheckbox" value="option1">
		Strain physically received at the CGC.
              </label>
            </div>
          </div>

          <div class="control-group">
            <label class="control-label" for="genotypeCheckbox">Genotype verified</label>
            <div class="controls">
              <label class="checkbox">
                <input type="checkbox" id="genotypeCheckbox" value="option1">
		Genotype verified by the CGC.
              </label>
            </div>
          </div>

          <div class="control-group">
            <label class="control-label" for="frozenCheckbox">Strain Frozen</label>
            <div class="controls">
              <label class="checkbox">
                <input type="checkbox" id="frozenCheckbox" value="option1">
		Strain frozen and placed in liquid N2 and at -80.
              </label>
            </div>
          </div>


          <div class="control-group">
            <label class="control-label" for="freezeVerifiedCheckbox">Freeze verified</label>
            <div class="controls">
              <label class="checkbox">
                <input type="checkbox" id="freezeVerifiedCheckbox" value="option1">
		Test thaw of strain verified.
              </label>
            </div>
          </div>

	  <!--
          <div class="control-group">
            <label class="control-label" for="multiSelect">Multicon-select</label>
            <div class="controls">
              <select multiple="multiple" id="multiSelect">
                <option>1</option>
                <option>2</option>
                <option>3</option>
                <option>4</option>
                <option>5</option>
              </select>
            </div>
          </div>
          <div class="control-group">
            <label class="control-label" for="fileInput">File input</label>
            <div class="controls">
              <input class="input-file" id="fileInput" type="file">
            </div>
          </div>
	  -->

          <div class="form-actions">
            <button type="submit" class="btn btn-primary" id="strain-submit">Save changes</button>
            <button class="btn">Cancel</button>
          </div>
        </fieldset>
      </form>


<script>
$('#strain-submit').click(function (e) {
	e.preventDefault(); 

	var parameters = {};
	$("#strain-form").find('input[value!=""], select[value!=""]').each(
		function () {
			parameters[$(this).attr('id')] = $(this).val();
		}
	);
	$.ajax({
	    url: '/strain/new-strain',
	    dataType: 'json',
	    type: "POST", 
	    data: parameters,
		success: function (data) {
			console.log("Successfully posted", data);
		},
		error: function (jqXHR, status, err) {
			console.log("Error! " + err, jqXHR);
		}
	});
	return false;
});
</script>


<script type="text/javascript">
   $('.contains-selecter').change(function() {
        var myId = $(this).attr('id');
 	var text = $('#' + myId + ' option:selected').text();
	console.log(text);
	
	// Hide all the other drop down elements
	$(this).siblings('[type]').hide();

	// Make the appropriate select element visible 
	$(this).siblings('[type=' + text + ']').show();

	return false;
	});

</script>      


    <script type="text/javascript">
            $('.btnAdd').click(function() {
		
	        // Assume that the +/- buttons are contained within
		// a div that we wish to clone.
		var toClone = $(this).parent();

		// The dynamic way of doing this doesn't work?
//                var matches = (" " + toClone.attr('class') + " ").match(/\s(\w+Duplicatable)/);
//                if (matches) {
//		     var myClass = matches[0];
//
//		     // How many of these elements already exist?
//		     var num = $('.' + myClass).length;
////		     alert("number is " + num);	
//                }


		// hard coded
                var num     = $('.containsDuplicatable').length; // how many "duplicatable" input fields we currently have

                var newNum  = new Number(num + 1);      // the numeric ID of the new input field being added
 
                // create the new element via clone(), and manipulate it's ID using newNum value
	 	// Again, the element to clone is hardcoded
               var newElem = $(toClone).clone().attr('id', 'contains' + newNum);
 
                $(newElem).children('select,input').each(function() {

		     // Replace the name and id numbers
		     var id     = $(this).attr('id').match(/(.+)\d+/);
		     var bareid = id[1];

                     $(this).attr('id',bareid + newNum);
                     console.log("Modified element to: ", bareid + newNum);

		     // enable the delete button
                     $(this).children('class="btnDel').attr('disabled','');
                     })
                 
                // insert the new element after the last "duplicatable" input field
                $('#contains' + num).after(newElem);
		return false;
             });
 
            $('.btnDel').click(function() {
	        // Currently hard-coded
		var toRemove = $(this).parent();
		$(toRemove).remove();
            });
 
            $('#btnDel').attr('disabled','disabled');
    </script>




[% END %]






[% MACRO link_to_wormbase(class,target,text) BLOCK;
    '<a target="_blank" href="http://www.wormbase.org/get?name=' _ target _ ';class=' _ class _ '">'  _ text _ '</a>';

END;
%]

















[%#
 #####################################################
 #
 #  Server Details: the server that generated the 
 #  block of code. Mostly useful for debugging. 
 #  
 ####################################################
%]
[% MACRO server_details(title) PERL %]
      my $host = `hostname`;
      chomp $host;
#     print "\n\n<!-- [% title %] generated by: $host -->\n\n\n\n\n";
      print "Generated by: $host";
[% END %]



[% BLOCK basic_report_index_page %]

   <div class="page-header">
      <h1>[% title %]</h1>
   </div>
   [% content %]
[% END %]




[%#
####################################################
#
#  GA
#
####################################################
%]
[% BLOCK google_analytics %]
   <!-- GA -->
   <!-- TODO: replace with our tracker -->
[% END %]














[%#
 #####################################################
 #
 #  Debugging
 #
 #    Simple view debugging. Should be passed the name 
 #    of the component since this is localized to the template
 #    (or block). That is, it doesn't work as expected when
 #    used via PROCESS or INCLUDE
 #  
 ####################################################
%]

[% BLOCK generic_debug_info %]
   <h5>General information:</h5>
   <pre>
   Catalyst action : [% c.controller.action_for(this) %]<br />
          template : [% template.name %]
   </pre>
[% END %]