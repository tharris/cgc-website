[%# Core template elements %]


[% BLOCK modal %]
<div class="modal-header">
      <button type="button" class="close" data-dismiss="modal">&times;</button>
      <h3>[% title %]</h3>
      [% content %]
</div>
[% END %]

[% BLOCK modal_body %]
<div class="modal-body">
   [% content %]
</div>
</div>
[% END %]

[% BLOCK  modal_footer %]
<div class="modal-footer">
    [% content %]
</div>
[% END %]


[%# Link to a species %]
[% MACRO species_link(species) BLOCK %]
   <em><a href="/species/[% species %]">[% species %]</a></em>
[% END; %]


[%# Link to a species %]
[% MACRO species_link_dynamic(species) BLOCK %]
   <em><a href="/species/[% species.name %]">[% species.name %]</a></em>
[% END; %]

[% MACRO ncbi_link(species) BLOCK %]
   <a href="http://www.ncbi.nlm.nih.gov/Taxonomy/Browser/wwwtax.cgi?id=[% species.ncbi_taxonomy_id %]">[% species.ncbi_taxonomy_id %]</a>
[% END; %]



[%# Typeahead support, required on all index pages %]
[% MACRO typeahead_support(class,columns) BLOCK %]

<script>
    $(function () {
        $('#search-[% class %]').typeahead({
            ajax: {
            	uris: [
		[% FOREACH col IN columns %]
            		'/rest/list/[% class %]?distinct;columns=[% col %]',
	        [% END %]
            	],
				preprocess: function (item) {
					return item[0];
				}
            },
        });
        
        $('#search-[% class %]').on('change',
            function (data) {
                window.location.href = '/[% class %]/' + data.target.value
                // If we want to get fancy and avoid page loads....
                // window.location.hash = data.target.value;
            }
        );

        /*
        $(window).hashchange(function () {
            // var laboratoryName = location.hash.replace(/^#/,'');
            $.ajax({
                url: '/[% class %]/' + [% class %]Name,
                dataType: 'json',
                success: function (json) {
                    console.log(json);
                    var tableRow = function (key) {
                        var row = $('<tr></tr>');
                        row.append($('<th></th>').html(key))
                            .append($('<td></td>').html(json[key]));
                        return row;
                    };
                    $('#[% class %]-view').empty();
                    $('#[% class %]-view').add(tableRow("name"));
                }
            });
        });
        */
    });
</script>
[% END %]




[% BLOCK admin_content %]
   [% IF c.check_user_roles('admin') %]
     <div class="alert alert-info"><h3>[% title %]</h3>
          <p><span class="label label-important">Important</span> This content is only visible to administrators!</p>
          <p>[% content %]</p>
     </div>
   [% END %]
[% END %]






[% BLOCK strain_submission_form %]

   [%# Dynamically select action - PUT or POST %]
      <form class="form-horizontal" method="POST" id="strain-form" action="/strain/new-strain">
<!--      <form class="form-horizontal" id="strain-form" action="#"> -->
        <fieldset>
          <legend>Origin</legend>

          <div class="control-group">
            <label class="control-label" for="submitted_by">Made By</label>
            <div class="controls">
              <input type="text" class="input-xlarge" id="made_by">
              <p class="help-block">The person who made the strain if different than the person submitting.</p>
            </div>
          </div>


          <div class="control-group">
            <label class="control-label" for="laboratory">Laboratory</label>
            <div class="controls">
                  <select id="laboratory">
                     <option></option>
	      [% FOREACH lab IN labs.keys.sort %]
                     <option value="[% labs.$lab.id %]">[% lab %] ([% labs.$lab.head %])</option>
	      [% END %]
              </select>
            </div>
          </div>
        </fieldset>

        <fieldset>
          <legend>Strain Information</legend>

          <div class="control-group">
            <label class="control-label" for="strain_name">Strain Name</label>
            <div class="controls">
              <input type="text" class="input-xlarge" id="strain_name">
              <p class="help-block">Enter the strain designation, for example, EG1000, N2.</p>
            </div>
          </div>


          <div class="control-group">
            <label class="control-label" for="species">Species</label>
            <div class="controls">
                  <select id="species">
                     <option></option>
	      [% FOREACH this_species IN species.keys.sort %]
                     <option value="[% species.$this_species %]">[% this_species %]</option>
	      [% END %]
              </select>
            </div>
          </div>

          <div class="control-group">
            <label class="control-label" for="genotype">Genotype</label>
            <div class="controls">
              <input type="text" class="input-xlarge" id="genotype">
              <p class="help-block">The genotype of the strain.</p>
            </div>
          </div>

          <div class="control-group">
            <label class="control-label" for="laboratory">Outcrossed</label>
            <div class="controls">
              <select id="outcrossed">
                <option></option>
                <option>not outcrossed</option>
                <option>1x</option>
                <option>2x</option>
                <option>3x</option>
                <option>4x</option>
                <option>5x</option>
                <option>6x</option>
                <option>7x</option>
                <option>8x</option>
                <option>9x</option>
                <option>10x</option>
              </select>
            </div>
          </div>

          <div class="control-group">
            <label class="control-label" for="mutagen">Mutagen</label>
            <div class="controls">
                  <select id="mutagen">
                     <option></option>
	      [% FOREACH mutagen IN mutagens.keys.sort %]
                     <option value="[% mutagens.$mutagen %]">[% mutagen %]</option>
	      [% END %]
              </select>
            </div>
          </div>

          <div class="control-group">
            <label class="control-label" for="remark">Remarks</label>
            <div class="controls">
              <textarea class="input-xlarge" id="remark" rows="3"></textarea>
            </div>
          </div>
	  </fieldset>


	  <fieldset>
	  <legend>Work Flow</legend>
	  <em>This section tracks the workflow steps for adding a new strain to the collection. Each step should be unique and trackable by user and date. Right now just checkboxes.</em>


          <div class="control-group">
            <label class="control-label" for="receivedCheckbox">Strain Received</label>
            <div class="controls">
              <label class="checkbox">
                <input type="checkbox" id="receivedCheckbox" value="option1">
		Strain physically received at the CGC.
              </label>
            </div>
          </div>

          <div class="control-group">
            <label class="control-label" for="genotypeCheckbox">Genotype verified</label>
            <div class="controls">
              <label class="checkbox">
                <input type="checkbox" id="genotypeCheckbox" value="option1">
		Genotype verified by the CGC.
              </label>
            </div>
          </div>

          <div class="control-group">
            <label class="control-label" for="frozenCheckbox">Strain Frozen</label>
            <div class="controls">
              <label class="checkbox">
                <input type="checkbox" id="frozenCheckbox" value="option1">
		Strain frozen and placed in liquid N2 and at -80.
              </label>
            </div>
          </div>


          <div class="control-group">
            <label class="control-label" for="freezeVerifiedCheckbox">Freeze verified</label>
            <div class="controls">
              <label class="checkbox">
                <input type="checkbox" id="freezeVerifiedCheckbox" value="option1">
		Test thaw of strain verified.
              </label>
            </div>
          </div>

	  <!--
          <div class="control-group">
            <label class="control-label" for="multiSelect">Multicon-select</label>
            <div class="controls">
              <select multiple="multiple" id="multiSelect">
                <option>1</option>
                <option>2</option>
                <option>3</option>
                <option>4</option>
                <option>5</option>
              </select>
            </div>
          </div>
          <div class="control-group">
            <label class="control-label" for="fileInput">File input</label>
            <div class="controls">
              <input class="input-file" id="fileInput" type="file">
            </div>
          </div>
	  -->

          <div class="form-actions">
            <button type="submit" class="btn btn-primary" id="strain-submit">Save changes</button>
            <button class="btn">Cancel</button>
          </div>
        </fieldset>
      </form>


<script>
$.fn.serializeObject = function() {
    var o = {};
    var a = this.serializeArray();
    $.each(a, function() {
        if (o[this.name] !== undefined) {
            if (!o[this.name].push) {
                o[this.name] = [o[this.name]];
            }
            o[this.name].push(this.value || '');
        } else {
            o[this.name] = this.value || '';
        }
    });
    return o;
};

$('#strain-submit').click(function (e) {
	e.preventDefault(); 

	var parameters = [];
	$("#strain-form").find('input[value!=""], select[value!=""]').each(
		function (item) {
			parameters.push({ item.attr('name'): item.val() });
		}
	);
	console.log(parameters);
	var myvalues = JSON.stringify(parameters);
	// console.log("Serialized", myvalues);
	$.ajax({
	    url: '/strain/new-strain',
	    dataType: 'json',
	    type: "POST", 
	    data: myvalues,
		success: function (data) {
			console.log("Successfully posted", data);
		},
		error: function (jqXHR, status, err) {
			console.log("Error! " + err, jqXHR);
		}
	});
	return false;
});
</script>


[% END %]











[% # EVERYTHIGN BELOW HERE IS CRUFT %]


[%#

    Build a JQuery dataTable.
    Parameters:
        order  : array of columns
        columns: hash ref associating columns to labels
        key    : data key for accessing the stash        
        passed_data : in lieu of passing a key for accessing data,
                      pass in pre-structured data as passed_data;
                      useful in cases when you want to change the processing heuristic.

   Note: build_data_table is no longer wrapped in a field BLOCK. This was too
   restrictive for formatting, for example, in cases where it was
   necessary to include multiple tables in a single field.
%]

[% MACRO build_data_table BLOCK;

      local_data = passed_data ? passed_data : fields.$key.data;

      headers = [];
      FOREACH o IN order; headers.push(columns.$o); END;

      # generate table
      jquery_data_table_html(headers, local_data, "table_${key}_by" _ colorbox, style, table_build, order);   

    END; # END of MACRO
%]

[%# jquery_data_table_html:
     
     It might be better to build the table directly from the data
     structure instead of formatting it into a html table and then
     styling via javascript.
%]
     
[% MACRO jquery_data_table_html(table_headers, rows,table_name,style,table_build, columns) BLOCK %]
  [% IF rows && rows.size > 0;
      # Set up some suitable defaults
       IF rows.size < 11 || (rows.size < 31 && table_headers.size < 3);
          paginate        = 'false';
          pagination_type = 'false';
      	  length          = 'false';
      	  lengthMenu      = 'false';
          filter          = 'false';
          info            = 'false';
       ELSIF rows.size < 31;
          paginate        = 'false';
          pagination_type = 'false';
      	  length          = 'false';
      	  lengthMenu      = 'false';
      	  filter          = 'true';
          info            = 'false';
       ELSE;
          paginate        = 'true';
          pagination_type = 'full_numbers';
      	  length          = 'true';
          lengthMenu      = '[[50, 100, 150, -1], [50, 100, 200, "All"]]';
          filter          = 'true';
      	  info            = 'true'; 
      END;

     UNLESS table_build;

   %]

    <table id="[% table_name %]" class="table table-striped">
    <thead>
        <tr>
            [% FOREACH header IN table_headers %]  
            <th>[% header %]</th>
            [% END %]
        </tr>
    </thead>
    <tbody>
        [%
          FOREACH row IN rows;
            '<tr>';
		FOREACH col IN columns;
		   '<td>';
                     row.$col;		   		    
		  '</td>';
	        END;
            '</tr>';
          END;
             %]
    </tbody>
  </table>
    [% END %]
<!--
    <script type="text/javascript" >
        WB.getPlugin("dataTables", function(){
          $jq('#[% table_name %]').dataTable({
            "bPaginate"        : [% paginate %],
            "bLengthChange"    : [% length   %],
            "sPaginationType"  : "[% pagination_type %]",
            "bFilter"          : [% filter %],
            "bInfo"            : [% info %],
            [% style %]
          });
        });
    </script>
-->
   [% END %]

[% END %]



[% MACRO link_to_wormbase(class,target,text) BLOCK;
    '<a target="_blank" href="http://www.wormbase.org/get?name=' _ target _ ';class=' _ class _ '">'  _ text _ '</a>';

END;
%]

















[%#
 #####################################################
 #
 #  Server Details: the server that generated the 
 #  block of code. Mostly useful for debugging. 
 #  
 ####################################################
%]
[% MACRO server_details(title) PERL %]
      my $host = `hostname`;
      chomp $host;
#     print "\n\n<!-- [% title %] generated by: $host -->\n\n\n\n\n";
      print "Generated by: $host";
[% END %]





[%#
####################################################
#
#  GA
#
####################################################
%]
[% BLOCK google_analytics %]
   <!-- GA -->
   <!-- TODO: replace with our tracker -->
[% END %]














[%#
 #####################################################
 #
 #  Debugging
 #
 #    Simple view debugging. Should be passed the name 
 #    of the component since this is localized to the template
 #    (or block). That is, it doesn't work as expected when
 #    used via PROCESS or INCLUDE
 #  
 ####################################################
%]

[% BLOCK generic_debug_info %]
   <h5>General information:</h5>
   <pre>
   Catalyst action : [% c.controller.action_for(this) %]<br />
          template : [% template.name %]
   </pre>
[% END %]