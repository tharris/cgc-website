[% WRAPPER modal title="Register a new account" %]

  [% WRAPPER modal_body %]


                <form method="post" id="register-form" action="[% c.secure_uri_for("/register") %]" style="float:left;">
                    <div style="font-size:1.3em">
                      <div class="login-holder">
                          <span id="fade">full name</span> <br />
                          <input id="name" type="text" name="name" size="30" placeholder="John Smith" value="[% full_name %]" />
                      </div>
                      <div class="login-holder">
                          <span id="fade">email</span><br />
                          <input id="email" type="email" name="email" size="30"  placeholder="john@example.net"  value="[% email %]"/>
                      </div>

                      <div class="login-holder ui-corner-all register-notice" id="system-message" style="width:15em;display:none;"></div>

                       <div class="login-holder">
 		           
                           <span id="fade">laboratory affiliation</span><a href="#" id="popover" rel="popover" class="btn" data-content="To order strains from the CGC, you must be affiliated with a lab assigned an official lab designation. We only ship strains to the primary addresses for these registered labs. If you don't have a lab designation, please contact us." data-original-title="Why do we need this?">Why?</a><br />
                           <input class="lab-designation" type="text" data-provide="typeahead" name="lab-designation" size="30"  />
                       </div>

                      <div class="login-holder">
                           <span id="fade">password</span><br />
                           <input id="password" type="password" name="password" size="30" value="[% password %]"/>
                      </div>
                      <div class="login-holder">
                           <span id="fade">confirm password</span><br />
                           <input id="confirm-password" type="password" name="password" size="30"/>
                      </div>

                      <input id="redirect" type="text" name="redirect" size="0" value="[% redirect %]" style="display:none;" />
                  </div>


<script>
// Charles Lawrence - Feb 16, 2012. Free to use and modify. Please attribute back to @geuis if you find this useful
// Twitter Bootstrap Typeahead doesn't support remote data querying. This is an expected feature in the future. In the meantime, others have submitted patches to the core bootstrap component that allow it. 
// The following will allow remote autocompletes *without* modifying any officially released core code. 
// If others find ways to improve this, please share.

    var autocomplete = $jq('.typeahead').typeahead()
        .on('keyup', function(ev){

            ev.stopPropagation();
            ev.preventDefault();

            //filter out up/down, tab, enter, and escape keys
            if( $jq.inArray(ev.keyCode,[40,38,9,13,27]) === -1 ){

                var self = $jq(this);
                
                //set typeahead source to empty
                self.data('typeahead').source = [];

                //active used so we aren't triggering duplicate keyup events
                if( !self.data('active') && self.val().length > 0){

                    self.data('active', true);

                    //Do data request. Insert your own API logic here.
// curl -H content-type:application/json http://localhost/rest/search/laboratory_designation/q
                    $jq.getJSON("[% c.uri_for('/search') %]/laboratory/",{
                        q: $(this).val()
                    }, function(data) {

                        //set this to true when your callback executes
                        self.data('active',true);

                        //Filter out your own parameters. Populate them into an array, since this is what typeahead's source requires
                        var arr = [],
                            i=data.results.length;
                        while(i--){
                            arr[i] = data.results[i].head;
                        }

                        //set your results into the typehead's source 
                        self.data('typeahead').source = arr;

                        //trigger keyup on the typeahead to make it search
                        self.trigger('keyup');

                        //All done, set to false to prepare for the next remote query.
                        self.data('active', false);

                    });

                }
            }
        });
</script>
</div>
  [% END %]


   [% WRAPPER modal_footer %]

            <button href="#" class="btn btn-primary" type="submit" onClick="register($jq(this));return false;">sign up â€º</button>
            <p><em> Already a member? <strong><a id="login" onClick='$jq(this).parent().parent().parent().parent().parent().load("[% c.secure_uri_for("/login") %]"); return false;'  href="[% c.secure_uri_for('/login') %]">Sign in...</a></strong></em>           
           </form>


<script>
  function register(r){
    var reg = $jq('#register-form'),  
        email = reg.find("#email"),        
        username= reg.find("#name"),
        password = reg.find("#password"),
        wbid = reg.find("#wbid"),
        redirect = reg.find("#redirect");
    if(WB.validate_fields(email,username,password,reg.find("#confirm-password")) == false) {
        return false;
    }
    $jq.ajax({   
          type: "POST",
          url: "/rest/register",
          data: {username:username.val(),email:email.val(), password:password.val(), redirect:redirect.val()},
          success: function(data){
                if(data==0) {
                alert("The email address has already been registered!"); 
                } else {
//		  $jq("#modal").modal('hide');
                  var content = $jq("#modal");
                  content.children().not("#spacer").remove();
                  content.prepend(data);
                }
            },
          error: function(request,status,error) {
              if(xmlHttpRequest.readyState == 0 || xmlHttpRequest.status == 0) 
                  return; 
              alert(request + " " + status + " " + error );
            }
      });
    return false;
    }
</script>
   [% END %]
[% END %]